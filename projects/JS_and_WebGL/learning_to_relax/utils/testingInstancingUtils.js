var crossVertData = 
[
	-0.1,  0.4, 0.0,
	-0.1, -0.4, 0.0,
	 0.1, -0.4, 0.0,

	 0.1, -0.4, 0.0,
	-0.1,  0.4, 0.0,
	 0.1,  0.4, 0.0,

	 0.4, -0.1, 0.0,
	-0.4, -0.1, 0.0,
	-0.4,  0.1, 0.0,
	
	-0.4,  0.1, 0.0,
	 0.4, -0.1, 0.0,
	 0.4,  0.1, 0.0,
]

var someColors = 
[
	1, 0, 0, 1,  // red
	0, 1, 0, 1,  // green
	0, 0, 1, 1,  // blue
	1, 0, 1, 1,  // magenta
	0, 1, 1, 1,  // cyan
]
var unitQuad = 
[
    -1, +1, 0,
    -1, -1, 0,
    +1, -1, 0,
    -1, +1, 0,
    +1, -1, 0,
    +1, +1, 0
];

var unitCube = 
[
	// front
    -1, +1, +1,
    -1, -1, +1,
    +1, -1, +1,
    -1, +1, +1,
    +1, -1, +1,
	+1, +1, +1,
	
	// back
	-1, +1, -1,
    -1, -1, -1,
    +1, -1, -1,
    -1, +1, -1,
    +1, -1, -1,
	+1, +1, -1,
	
	// right 
	+1, +1, -1,
	+1, -1, -1,
	+1, -1, +1,
+
	+1, +1, -1,
	+1, -1, +1,
	+1, +1, +1,

	// left 
	-1, +1, -1,
	-1, -1, -1,
	-1, -1, +1,
+
	-1, +1, -1,
	-1, -1, +1,
	-1, +1, +1,

	// top
	-1, +1, +1,
	-1, +1, -1,
	+1, +1, -1,

	-1, +1, +1,
	+1, +1, -1,
	+1, +1, +1,

	// bottom
	-1, -1, +1,
	-1, -1, -1,
	+1, -1, -1,

	-1, -1, +1,
	+1, -1, -1,
	+1, -1, +1,
];

// just testing
var unitCubeWithFakeTexAndNormals = 
[
	// front	  		// front   			// front	
    -1, +1, +1,      	-1, +1, +1,       -1, +1, +1,
    -1, -1, +1,      	-1, -1, +1,       -1, -1, +1,
    +1, -1, +1,      	+1, -1, +1,       +1, -1, +1,
    -1, +1, +1,      	-1, +1, +1,       -1, +1, +1,
    +1, -1, +1,      	+1, -1, +1,       +1, -1, +1,
	+1, +1, +1,  	 	+1, +1, +1,   	  +1, +1, +1,
	  	   	
	// back  			// back   			// back
	-1, +1, -1,  	 	-1, +1, -1,   	   -1, +1, -1,
    -1, -1, -1,      	-1, -1, -1,        -1, -1, -1,
    +1, -1, -1,      	+1, -1, -1,        +1, -1, -1,
    -1, +1, -1,      	-1, +1, -1,        -1, +1, -1,
    +1, -1, -1,      	+1, -1, -1,        +1, -1, -1,
	+1, +1, -1,  	 	+1, +1, -1,   	   +1, +1, -1,

	// right   			// right   			// right  
	+1, +1, -1,  		+1, +1, -1,   		+1, +1, -1,
	+1, -1, -1,  		+1, -1, -1,   		+1, -1, -1,
	+1, -1, +1,  		+1, -1, +1,   		+1, -1, +1,

	+1, +1, -1,  		+1, +1, -1,   		+1, +1, -1,
	+1, -1, +1,  		+1, -1, +1,   		+1, -1, +1,
	+1, +1, +1,  		+1, +1, +1,   		+1, +1, +1,
	
	// left   			// left    		// left 
	-1, +1, -1,  	-1, +1, -1,   		-1, +1, -1,
	-1, -1, -1,  	-1, -1, -1,   		-1, -1, -1,
	-1, -1, +1,  	-1, -1, +1,   		-1, -1, +1,

	-1, +1, -1,  	-1, +1, -1,   		-1, +1, -1,
	-1, -1, +1,  	-1, -1, +1,   		-1, -1, +1,
	-1, +1, +1,  	-1, +1, +1,   		-1, +1, +1,
     
	// top  			// top   		// top
	-1, +1, +1,  	-1, +1, +1,   		-1, +1, +1,
	-1, +1, -1,  	-1, +1, -1,   		-1, +1, -1,
	+1, +1, -1,  	+1, +1, -1,   		+1, +1, -1,
	
	-1, +1, +1,  	-1, +1, +1,   		-1, +1, +1,
	+1, +1, -1,  	+1, +1, -1,   		+1, +1, -1,
	+1, +1, +1,  	+1, +1, +1,   		+1, +1, +1,
	
	// bottom  		// bottom   		// bottom
	-1, -1, +1,  	-1, -1, +1,   		-1, -1, +1,
	-1, -1, -1,  	-1, -1, -1,   		-1, -1, -1,
	+1, -1, -1,  	+1, -1, -1,   		+1, -1, -1,
	
	-1, -1, +1,  	-1, -1, +1,   		-1, -1, +1,
	+1, -1, -1,  	+1, -1, -1,   		+1, -1, -1,
	+1, -1, +1,  	+1, -1, +1,   		+1, -1, +1,
];